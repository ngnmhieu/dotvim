# enable Ctrl-S in vim
stty -ixon 

# use vim as standard command-line editor
export EDITOR=vim

# source aliases file
[[ -r ~/.bash_aliases ]] && . ~/.bash_aliases

# fancy bash start line
fancy_custom_prompt() {
  SHORT_PWD=""
  DIRS=$(dirs +0 | sed "s/\//;/g")
  DEPTH=$(dirs +0 | grep -o "/" | wc -l)
  COUNT=0
  OLDIFS=$IFS
  IFS=';'
  for DIR in $DIRS ; do
    if [ $COUNT -eq 0 ]; then
      SHORT_PWD=$DIR
    elif [ $COUNT -eq $DEPTH ]; then
      SHORT_PWD=$SHORT_PWD/$DIR
    else
      SHORT_PWD=$SHORT_PWD/${DIR:0:1}
    fi
    let COUNT+=1
  done
  echo -e $SHORT_PWD
}
PS1="[\u@\h] \$(fancy_custom_prompt)\[\033[32m\]\$(git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/')\[\033[00m\] $ "

# bash completion
PLATFORM=$(uname)
if [[ $PLATFORM == "Darwin" ]]; then
  export BASH_COMPLETION_COMPAT_DIR="/usr/local/etc/bash_completion.d"
  BASH_COMPLETION_SCRIPT=/usr/local/etc/profile.d/bash_completion.sh
  [[ -r $BASH_COMPLETION_SCRIPT ]] && . $BASH_COMPLETION_SCRIPT 
fi 

if [[ $PLATFORM == "Linux" ]]; then
  BASH_COMPLETION_SCRIPT=/usr/share/bash-completion/bash_completion 
  [[ -r $BASH_COMPLETION_SCRIPT ]] && . $BASH_COMPLETION_SCRIPT 
fi

# auto complete for git

GIT_COMPLETION=~/.vim/dotfiles/bash/autocomplete/git-completion.bash
if [ -f $GIT_COMPLETION ]; then
  . $GIT_COMPLETION 
fi
